// ReSharper disable RedundantNameQualifier
using Desktop.Robot;

namespace Willow.DeviceAutomation.InputDevices.Extensions;

internal static class KeyExtensions
{
    public static Key ToRobot(this Enums.Key key)
    {
        return key switch
        {
            Enums.Key.A => Key.A,
            Enums.Key.B => Key.B,
            Enums.Key.C => Key.C,
            Enums.Key.D => Key.D,
            Enums.Key.E => Key.E,
            Enums.Key.F => Key.F,
            Enums.Key.G => Key.G,
            Enums.Key.H => Key.H,
            Enums.Key.I => Key.I,
            Enums.Key.J => Key.J,
            Enums.Key.K => Key.K,
            Enums.Key.L => Key.L,
            Enums.Key.M => Key.M,
            Enums.Key.N => Key.N,
            Enums.Key.O => Key.O,
            Enums.Key.P => Key.P,
            Enums.Key.Q => Key.Q,
            Enums.Key.R => Key.R,
            Enums.Key.S => Key.S,
            Enums.Key.T => Key.T,
            Enums.Key.U => Key.U,
            Enums.Key.V => Key.V,
            Enums.Key.W => Key.W,
            Enums.Key.X => Key.X,
            Enums.Key.Y => Key.Y,
            Enums.Key.Z => Key.Z,
            Enums.Key.Num0 => Key.Zero,
            Enums.Key.Num1 => Key.One,
            Enums.Key.Num2 => Key.Two,
            Enums.Key.Num3 => Key.Three,
            Enums.Key.Num4 => Key.Four,
            Enums.Key.Num5 => Key.Five,
            Enums.Key.Num6 => Key.Six,
            Enums.Key.Num7 => Key.Seven,
            Enums.Key.Num8 => Key.Eight,
            Enums.Key.Num9 => Key.Nine,
            Enums.Key.Comma => Key.Comma,
            Enums.Key.Colon => Key.Colon,
            Enums.Key.Semicolon => Key.Semicolon,
            Enums.Key.Dot => Key.Dot,
            Enums.Key.Dollar => Key.Dollar,
            Enums.Key.Slash => Key.Slash,
            Enums.Key.Backslash => Key.Backslash,
            Enums.Key.Percent => Key.Percent,
            Enums.Key.LessThan => Key.LessThan,
            Enums.Key.Equal => Key.Equal,
            Enums.Key.GreaterThan => Key.GreaterThan,
            Enums.Key.Quotation => Key.QuotationMark,
            Enums.Key.OpenParenthesis => Key.OpenParenthesis,
            Enums.Key.CloseParenthesis => Key.CloseParenthesis,
            Enums.Key.OpenBracket => Key.OpenBracket,
            Enums.Key.CloseBracket => Key.CloseBracket,
            Enums.Key.OpenBrace => Key.OpenBrace,
            Enums.Key.CloseBrace => Key.CloseBrace,
            Enums.Key.Question => Key.Interrogation,
            Enums.Key.LeftCommand => Key.Command,
            Enums.Key.LeftShift => Key.Shift,
            Enums.Key.LeftOption => Key.Option,
            Enums.Key.LeftControl => Key.Control,
            Enums.Key.LeftAlt => Key.Alt,
            Enums.Key.CapsLock => Key.CapsLock,
            Enums.Key.Enter => Key.Enter,
            Enums.Key.Tab => Key.Tab,
            Enums.Key.Delete => Key.Delete,
            Enums.Key.Escape => Key.Esc,
            Enums.Key.Insert => Key.Insert,
            Enums.Key.Home => Key.Home,
            Enums.Key.End => Key.End,
            Enums.Key.PageUp => Key.PageUp,
            Enums.Key.PageDown => Key.PageDown,
            Enums.Key.Backspace => Key.Backspace,
            Enums.Key.Plus => Key.Plus,
            Enums.Key.Minus => Key.Minus,
            Enums.Key.PrintScreen => Key.PrintScreen,
            Enums.Key.ScrollLock => Key.ScrollLock,
            Enums.Key.NumLock => Key.NumLock,
            Enums.Key.PauseBreak => Key.Pause,
            Enums.Key.F1 => Key.F1,
            Enums.Key.F2 => Key.F2,
            Enums.Key.F3 => Key.F3,
            Enums.Key.F4 => Key.F4,
            Enums.Key.F5 => Key.F5,
            Enums.Key.F6 => Key.F6,
            Enums.Key.F7 => Key.F7,
            Enums.Key.F8 => Key.F8,
            Enums.Key.F9 => Key.F9,
            Enums.Key.F10 => Key.F10,
            Enums.Key.F11 => Key.F11,
            Enums.Key.F12 => Key.F12,
            Enums.Key.LeftArrow => Key.Left,
            Enums.Key.UpArrow => Key.Up,
            Enums.Key.RightArrow => Key.Right,
            Enums.Key.DownArrow => Key.Down,
            Enums.Key.None => throw new InvalidOperationException("None key was pressed")
        };
    }
}
